{{- if eq .machine.type "personal" }}
{{- if eq .chezmoi.os "darwin" }}
## ============================================================================================== ##
##                                        HomeLab Functions                                       ##
## ============================================================================================== ##
hl-connect-dmz() {
    networksetup -setairportnetwork en0 "$(gpg -qd ~/.secrets/DMZ_SSID 2>/dev/null)" "$(gpg -qd ~/.secrets/DMZ_WNP 2>/dev/null)"
}
hl-connect-family() {
    networksetup -setairportnetwork en0 "$(gpg -qd ~/.secrets/FAMILY_SSID 2>/dev/null)" "$(gpg -qd ~/.secrets/FAMILY_WNP 2>/dev/null)"
}
hl-connect-iot() {
    networksetup -setairportnetwork en0 "$(gpg -qd ~/.secrets/IOT_SSID 2>/dev/null)" "$(gpg -qd ~/.secrets/IOT_WNP 2>/dev/null)"
}
{{- end }}
{{- end }}

## ============================================================================================== ##
##                                          GPG Functions                                         ##
## ============================================================================================== ##
gpg-store-secret() {
    local secret="${1}"
    local secretPath="${3:-${HOME}/.secrets}/${2}"

    echo "${secret}" | gpg --output "${secretPath}" -aeqs --recipient {{ .gpg.signingEmail }}
    chmod 0600 "${secretPath}"
}

## ============================================================================================== ##
##                                        Kubectl Functions                                       ##
## ============================================================================================== ##
kgsec-decrypt() {
    kgsec "${@}" -o json | jq '.data | map_values(@base64d)'
}

## ============================================================================================== ##
##                                       Terramate Functions                                      ##
## ============================================================================================== ##
tmra()      { _tmr false "apply" "${@}" }
tmrac()     { _tmr false "apply" "--changed" "${@}" }
tmract()    { _tmr true "apply" "--changed" "${@}" }
tmrat()     { _tmr true "apply" "${@}" }

tmri()      { _tmr false "init" "${@}" }
tmric()     { _tmr false "init" "--changed" "${@}" }
tmrict()    { _tmr true "init" "--changed" "${@}" }
tmrit()     { _tmr true "init" "${@}" }

tmrp()      { _tmr false "plan" "${@}" }
tmrpc()     { _tmr false "plan" "--changed" "${@}" }
tmrpct()    { _tmr true "plan" "--changed" "${@}" }
tmrpt()     { _tmr true "plan" "${@}" }

_tmr() {
    if [[ ! "$(find . -type f -maxdepth 1 -name "*.tm.hcl" | wc -l )" -gt 0 ]]; then
        echo "$(tput setaf 3)Warning: Terramate configuration not detected, no action taken.$(tput sgr0)"
        return 1
    fi
    
    local enableLogfile="${1:?}" && shift
    local -a terraformArgs=("${1:?}") && shift
    local -a terramateArgs=()

    while [ "${1}" != "" ]; do
        case "${1}" in
            -c | -concise )
                terraformArgs+=("${1}") && shift;;
            -u | -upgrade )
                terraformArgs+=("${1}") && shift;;
                
            * )
                terramateArgs+=("${1}") && shift;;
        esac
    done

    if [[ "${enableLogfile}" == false ]]; then
        terramate run "${terramateArgs[@]}" -- terraaform "${terraformArgs[@]}"
    else
        local -r branch="$(git rev-parse --abbrev-ref HEAD)"
        local -r branchLogdir="${HOME}/.terramate/logs/v2/${branch}"
        local -r branchLogFile="${branchLogdir}/$(gdate "+%Y-%m-%d_%H-%M-%S")_${1}.log"
            
        mkdir -p "${branchLogdir}"
        terramate run "${terramateArgs[@]}" -- terraform ${terraformArgs[@]} -no-color 2>&1 | tee "${branchLogFile}"
        echo ">>> Terramate run log saved: "${branchLogFile}""
    fi
}
