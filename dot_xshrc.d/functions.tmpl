{{- if eq .machine.type "personal" }}
{{- if eq .chezmoi.os "darwin" }}
## ============================================================================================== ##
##                                        HomeLab Functions                                       ##
## ============================================================================================== ##
hl-connect-dmz() {
    networksetup -setairportnetwork en0 "$(gpg -qd ~/.secrets/DMZ_SSID 2>/dev/null)" "$(gpg -qd ~/.secrets/DMZ_WNP 2>/dev/null)"
}
hl-connect-family() {
    networksetup -setairportnetwork en0 "$(gpg -qd ~/.secrets/FAMILY_SSID 2>/dev/null)" "$(gpg -qd ~/.secrets/FAMILY_WNP 2>/dev/null)"
}
hl-connect-iot() {
    networksetup -setairportnetwork en0 "$(gpg -qd ~/.secrets/IOT_SSID 2>/dev/null)" "$(gpg -qd ~/.secrets/IOT_WNP 2>/dev/null)"
}
{{- end }}
{{- end }}

## ============================================================================================== ##
##                                          GPG Functions                                         ##
## ============================================================================================== ##
gpg-store-secret() {
    local secret="${1}"
    local secretPath="${3:-${HOME}/.secrets}/${2}"

    echo "${secret}" | gpg --output "${secretPath}" -aeqs --recipient {{ .gpg.signingEmail }}
    chmod 0600 "${secretPath}"
}

## ============================================================================================== ##
##                                        Kubectl Functions                                       ##
## ============================================================================================== ##
kgsec-decrypt() {
    kgsec "${@}" -o json | jq '.data | map_values(@base64d)'
}

## ============================================================================================== ##
##                                       Terramate Functions                                      ##
## ============================================================================================== ##
tmra()		{ _tmr "apply" "${@}" }
tmrac() 	{ _tmr "apply" "--changed" "${@}" }
tmract() 	{ _tmrt "apply" "--changed" "${@}" }
tmrat() 	{ _tmrt "apply" "${@}" }

tmri()		{ _tmr "init" "${@}" }
tmric() 	{ _tmr "init" "--changed" "${@}" }
tmrict() 	{ _tmrt "init" "--changed" "${@}" }
tmrit() 	{ _tmrt "init" "${@}" }

tmrp()		{ _tmr "plan" "${@}" }
tmrpc() 	{ _tmr "plan" "--changed" "${@}" }
tmrpct() 	{ _tmrt "plan" "--changed" "${@}" }
tmrpt() 	{ _tmrt "plan" "${@}" }

_tmr() {
	terramate run "${@:2}" -- terraform ${1}
}
_tmrt() {
	if [[ ! "$(find . -type f -maxdepth 1 -name "*.tm.hcl" | wc -l )" -gt 0 ]]; then
		echo "Terramate configuration not detected, no action taken."
		return 1
	fi
	
	local -r branch="$(git rev-parse --abbrev-ref HEAD)"
	local -r branchLogdir="${HOME}/.terramate/logs/${branch}"
	local -r branchLogFile="${branchLogdir}/${1}_$(gdate "+%Y-%m-%d_%H-%M-%S").log"
	
	mkdir -p "${branchLogdir}"
	terramate run "${@:2}" -- terraform ${1} -no-color 2>&1 | tee "${branchLogFile}"
	echo ">>> Terramate run log saved: "${branchLogFile}""
}
